---
import "../styles/bootstrap.scss";
import cookies from "../cookies";
import LogoutButton from "../components/LogoutButton.astro";
import LoginButton from "../components/LoginButton.astro";

export interface Props {
  title: string;
}

const implies = (x: any, y: any) => (x ? y : true);

const { title } = Astro.props;
const isLoggedIn = Astro.cookies.has(cookies.refreshToken);

const home = "Index";
const pages = [
  { url: "/", title: "Home", requiresAuth: false },
  { url: "/lineas", title: "Lineas", requiresAuth: true },
  { url: "/nombreParada", title: "Nombre parada", requiresAuth: true },
  { url: "/buscar", title: "Buscar", requiresAuth: true },
  { url: "/log", title: "Log", requiresAuth: true },
].filter((x) => implies(x.requiresAuth, isLoggedIn));
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <script src="bootstrap/dist/js/bootstrap.min.js"></script>

    <nav class="navbar navbar-expand-lg bg-light">
      <div class="container-fluid">
        <a class="navbar-brand" href="/">{home}</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            {
              pages.map((page) => (
                <li class="nav-item">
                  <a
                    class={`nav-link ${
                      page.url === Astro.url.pathname ? "active" : ""
                    }`}
                    aria-current="page"
                    href={page.url}
                  >
                    {page.title}
                  </a>
                </li>
              ))
            }
          </ul>
          <div class="ms-auto">
            {
              isLoggedIn ? (
                <LogoutButton action="/auth/logout" />
              ) : (
                <LoginButton
                  audience={import.meta.env.PUBLIC_AUTH0_AUDIENCE}
                  baseUrl={import.meta.env.PUBLIC_AUTH0_BASEURL}
                  clientId={import.meta.env.PUBLIC_AUTH0_CLIENTID}
                  callbackUrl={`${Astro.url.origin}/auth/callback`}
                />
              )
            }
          </div>
        </div>
      </div>
    </nav>
    <div class="container">
      <slot />
    </div>
  </body>
</html>
